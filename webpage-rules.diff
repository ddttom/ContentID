diff --git a/docs/development-notes/webpage-rules.md b/docs/development-notes/webpage-rules.md
index abc123..def456 100644
--- a/docs/development-notes/webpage-rules.md
+++ b/docs/development-notes/webpage-rules.md
@@ -79,9 +79,12 @@
 <head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <meta http-equiv="Content-Security-Policy" content="default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self';">
+  <base href="./">
   <title>ContentID Manager</title>
   <link rel="stylesheet" href="styles/styles.css">
-  <script type="module" src="scripts/lib.js"></script>
-  <script type="module" src="scripts/main.js"></script>
+  <script type="module" src="scripts/init.js"></script>
 </head>
 <body>
-  <!-- Block-based content structure -->
+  <div id="header-container"></div>
+  <main role="main">
+    <!-- Page content -->
+  </main>
+  <div id="footer-container"></div>
 </body>
 </html>
 ```
 
-### Block HTML Structure
+### Component HTML Structure
 
 ```html
-<div class="block" data-block-name="example">
-  <div class="example-content">
-    <!-- Block-specific content -->
-  </div>
-</div>
+<!-- Header Component Container -->
+<div id="header-container"></div>
+
+<!-- Footer Component Container -->
+<div id="footer-container"></div>
 ```
 
+### Component Loading
+
+```javascript
+// init.js
+import { loadCommonComponents } from './components.js';
+
+// Initialize components when DOM is ready
+document.addEventListener('DOMContentLoaded', () => {
+  loadCommonComponents();
+});
+
+// components.js
+export async function loadComponent(path, targetSelector) {
+  try {
+    const response = await fetch(path);
+    if (!response.ok) {
+      throw new Error(`Failed to load component: ${path}`);
+    }
+    const html = await response.text();
+    const target = document.querySelector(targetSelector);
+    if (!target) {
+      throw new Error(`Target element not found: ${targetSelector}`);
+    }
+    target.innerHTML = html;
+  } catch (error) {
+    console.error('Error loading component:', error);
+  }
+}
+
+export async function loadCommonComponents() {
+  await Promise.all([
+    loadComponent('./components/header.html', '#header-container'),
+    loadComponent('./components/footer.html', '#footer-container')
+  ]);
+}
